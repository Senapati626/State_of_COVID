{"ast":null,"code":"import _classCallCheck from\"D:/covidtrack/State_of_COVID/State_of_COVID/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/covidtrack/State_of_COVID/State_of_COVID/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/covidtrack/State_of_COVID/State_of_COVID/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/covidtrack/State_of_COVID/State_of_COVID/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import'./performers.css';import LottieAnimation from'./Lottie';import confetti from'./confetti.json';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Performfilter=/*#__PURE__*/function(_React$Component){_inherits(Performfilter,_React$Component);var _super=_createSuper(Performfilter);function Performfilter(){var _this;_classCallCheck(this,Performfilter);_this=_super.call(this);_this.showRR=function(){_this.setState({rr:!_this.state.rr});};_this.showCFR=function(){_this.setState({cfr:!_this.state.cfr});};_this.showTPR=function(){_this.setState({tpr:!_this.state.tpr});};_this.showTPC=function(){_this.setState({tpc:!_this.state.tpc});};_this.showLCC=function(){_this.setState({lcc:!_this.state.lcc});};_this.state={rr:false,cfr:false,tpr:false,tpc:false,lcc:false};return _this;}_createClass(Performfilter,[{key:\"render\",value:function render(){var finalData=this.props.data;var findMaxRecoveryRatio=function findMaxRecoveryRatio(arr){var max=0;var nation=\"\";var solve=[];for(var i=0;i<arr.length;i++){if(parseInt(arr[i].cases.recovered)/parseInt(arr[i].cases.total)>max){max=(parseInt(arr[i].cases.recovered)/parseInt(arr[i].cases.total)).toFixed(4);nation=arr[i].country;}}solve.push(max,nation);return solve;};var findMinCFR=function findMinCFR(arr){var min=1;var nation=\"\";var solve=[];for(var i=0;i<arr.length;i++){if(parseInt(arr[i].deaths.total)/parseInt(arr[i].cases.total)<min){min=(parseInt(arr[i].deaths.total)/parseInt(arr[i].cases.total)).toFixed(7);nation=arr[i].country;}}solve.push(min,nation);return solve;};var findMinTPR=function findMinTPR(arr){var min=1;var nation=\"\";var solve=[];for(var i=0;i<arr.length;i++){if(parseInt(arr[i].cases.total)/parseInt(arr[i].tests.total)<min){min=(parseInt(arr[i].cases.total)/parseInt(arr[i].tests.total)).toFixed(7);nation=arr[i].country;}}solve.push(min,nation);return solve;};var findmaxTPC=function findmaxTPC(arr){var max=0;var nation=\"\";var solve=[];for(var i=0;i<arr.length;i++){if(parseInt(arr[i].tests.total)/parseInt(arr[i].population)>max){max=(parseInt(arr[i].tests.total)/parseInt(arr[i].population)).toFixed(7);nation=arr[i].country;}}solve.push(max,nation);return solve;};var findminLCC=function findminLCC(arr){var min=1;var nation=\"\";var solve=[];for(var i=0;i<arr.length;i++){if(parseInt(arr[i].cases.total)/parseInt(arr[i].population)<min){min=(parseInt(arr[i].cases.total)/parseInt(arr[i].population)).toFixed(7);nation=arr[i].country;}}solve.push(min,nation);return solve;};var CFR=findMinCFR(finalData);var RR=findMaxRecoveryRatio(finalData);var TPR=findMinTPR(finalData);var TPC=findmaxTPC(finalData);var LCC=findminLCC(finalData);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"performer_wrapper\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"performer_header_main\",children:'Best Case Fatality Ratio'}),/*#__PURE__*/_jsx(\"p\",{className:\"performer_header_deputy\",children:'Case Fatality Ratio (CFR) = Number of Deaths due to COVID / Number of positive COVID cases.'}),/*#__PURE__*/_jsxs(\"div\",{className:\"performer_content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"performer_section\",id:\"wrapper\",children:[/*#__PURE__*/_jsx(\"button\",{className:this.state.cfr?\"performer_button dissolve vanish\":\"performer_button\",id:\"button\",onClick:this.showCFR,children:\"check results\"}),/*#__PURE__*/_jsx(\"p\",{className:this.state.cfr?\"performer_text_header\":\"performer_text_header vanish\",id:\"text\",children:CFR[1]}),/*#__PURE__*/_jsx(\"p\",{className:this.state.cfr?\"performer_text\":\"performer_text vanish\",children:CFR[1]+\" has a Case Fatality Ratio of just \"+CFR[0]+\".\"})]}),/*#__PURE__*/_jsx(\"div\",{className:this.state.cfr?\"confetti\":\"hide\",children:/*#__PURE__*/_jsx(LottieAnimation,{lotti:confetti,height:300,width:300})})]}),/*#__PURE__*/_jsx(\"h1\",{className:\"performer_header_main\",children:'Best Recovery Ratio'}),/*#__PURE__*/_jsx(\"p\",{className:\"performer_header_deputy\",children:'Recovery Ratio = Number of Recoveries / Number of positive Cases'}),/*#__PURE__*/_jsx(\"div\",{className:\"performer_content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"performer_section\",id:\"wrapper\",children:[/*#__PURE__*/_jsx(\"button\",{className:this.state.rr?\"performer_button dissolve vanish\":\"performer_button\",id:\"button\",onClick:this.showRR,children:\"check results\"}),/*#__PURE__*/_jsx(\"p\",{className:this.state.rr?\"performer_text_header\":\"performer_text_header vanish\",id:\"text\",children:RR[1]}),/*#__PURE__*/_jsx(\"p\",{className:this.state.rr?\"performer_text\":\"performer_text vanish\",children:RR[1]+\" has the highest Recovery Ratio of \"+RR[0]+\".\"})]})}),/*#__PURE__*/_jsx(\"h1\",{className:\"performer_header_main\",children:'Lowest Test Positivity Rate'}),/*#__PURE__*/_jsx(\"p\",{className:\"performer_header_deputy\",children:'Test Positivity Rate = Number of Positive Cases / Number of Tests Conducted'}),/*#__PURE__*/_jsx(\"div\",{className:\"performer_content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"performer_section\",id:\"wrapper\",children:[/*#__PURE__*/_jsx(\"button\",{className:this.state.tpr?\"performer_button dissolve vanish\":\"performer_button\",id:\"button\",onClick:this.showTPR,children:\"check results\"}),/*#__PURE__*/_jsx(\"p\",{className:this.state.tpr?\"performer_text_header\":\"performer_text_header vanish\",id:\"text\",children:TPR[1]}),/*#__PURE__*/_jsx(\"p\",{className:this.state.tpr?\"performer_text\":\"performer_text vanish\",children:TPR[1]+\" has the lowest Tests Positivity Rate of \"+TPR[0]+\".\"})]})}),/*#__PURE__*/_jsx(\"h1\",{className:\"performer_header_main\",children:'Highest Tests per Capita'}),/*#__PURE__*/_jsx(\"p\",{className:\"performer_header_deputy\",children:'Tests per Capita = Number of Tests Conducted / Total population'}),/*#__PURE__*/_jsx(\"div\",{className:\"performer_content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"performer_section\",id:\"wrapper\",children:[/*#__PURE__*/_jsx(\"button\",{className:this.state.tpc?\"performer_button dissolve vanish\":\"performer_button\",id:\"button\",onClick:this.showTPC,children:\"check results\"}),/*#__PURE__*/_jsx(\"p\",{className:this.state.tpc?\"performer_text_header\":\"performer_text_header vanish\",id:\"text\",children:TPC[1]}),/*#__PURE__*/_jsx(\"p\",{className:this.state.tpc?\"performer_text\":\"performer_text vanish\",children:TPC[1]+\" has the highest Tests per Capita of \"+TPC[0]+\". (If it's more than 1, then two or more tests have been administered on each person)\"})]})}),/*#__PURE__*/_jsx(\"h1\",{className:\"performer_header_main\",children:'Lowest Positive Cases per Capita'}),/*#__PURE__*/_jsx(\"p\",{className:\"performer_header_deputy\",children:'Cases per Capita = Total number of Cases / Total Population'}),/*#__PURE__*/_jsx(\"div\",{className:\"performer_content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"performer_section\",id:\"wrapper\",children:[/*#__PURE__*/_jsx(\"button\",{className:this.state.lcc?\"performer_button dissolve vanish\":\"performer_button\",id:\"button\",onClick:this.showLCC,children:\"check results\"}),/*#__PURE__*/_jsx(\"p\",{className:this.state.lcc?\"performer_text_header\":\"performer_text_header vanish\",id:\"text\",children:LCC[1]}),/*#__PURE__*/_jsx(\"p\",{className:this.state.lcc?\"performer_text\":\"performer_text vanish\",children:LCC[1]+\" has the lowest positive cases per capita of \"+LCC[0]+\".\"})]})})]})});}}]);return Performfilter;}(React.Component);export default Performfilter;","map":{"version":3,"sources":["D:/covidtrack/State_of_COVID/State_of_COVID/src/Components/Performers/Performfilter.js"],"names":["React","LottieAnimation","confetti","Performfilter","showRR","setState","rr","state","showCFR","cfr","showTPR","tpr","showTPC","tpc","showLCC","lcc","finalData","props","data","findMaxRecoveryRatio","arr","max","nation","solve","i","length","parseInt","cases","recovered","total","toFixed","country","push","findMinCFR","min","deaths","findMinTPR","tests","findmaxTPC","population","findminLCC","CFR","RR","TPR","TPC","LCC","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport './performers.css';\r\nimport LottieAnimation from './Lottie';\r\nimport confetti from './confetti.json';\r\n\r\nclass Performfilter extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            rr: false,\r\n            cfr: false,\r\n            tpr: false,\r\n            tpc: false,\r\n            lcc: false\r\n        }\r\n    }\r\n    showRR = () =>{\r\n        this.setState({rr: (!this.state.rr)})\r\n    }\r\n    showCFR = () =>{\r\n        this.setState({cfr: (!this.state.cfr)})\r\n    }\r\n    showTPR = () => {\r\n        this.setState({tpr: (!this.state.tpr)})\r\n    }\r\n    showTPC = () => {\r\n        this.setState({tpc: (!this.state.tpc)})\r\n    }\r\n    showLCC = () => {\r\n        this.setState({lcc: (!this.state.lcc)})\r\n    }\r\n    render(){\r\n    const finalData = this.props.data;\r\n    const findMaxRecoveryRatio = (arr) => {\r\n        let max = 0;\r\n        let nation = \"\";\r\n        let solve = [];\r\n        for(let i=0; i<arr.length; i++){\r\n            if((parseInt(arr[i].cases.recovered)/parseInt(arr[i].cases.total)) > max){\r\n                max = (parseInt(arr[i].cases.recovered)/parseInt(arr[i].cases.total)).toFixed(4);\r\n                nation = arr[i].country\r\n            }\r\n        }\r\n        solve.push(max,nation);\r\n        return solve;\r\n    }\r\n    const findMinCFR = (arr) => {\r\n        let min = 1;\r\n        let nation = \"\";\r\n        let solve = [];\r\n        for(let i = 0; i<arr.length; i++){\r\n            if((parseInt(arr[i].deaths.total)/parseInt(arr[i].cases.total)) < min){\r\n                min = (parseInt(arr[i].deaths.total)/parseInt(arr[i].cases.total)).toFixed(7);\r\n                nation = arr[i].country;\r\n            }\r\n        }\r\n        solve.push(min,nation);\r\n        return solve;\r\n    }\r\n    const findMinTPR = (arr) => {\r\n        let min = 1;\r\n        let nation = \"\";\r\n        let solve = [];\r\n        for(let i = 0; i<arr.length; i++){\r\n            if((parseInt(arr[i].cases.total)/parseInt(arr[i].tests.total)) < min){\r\n                min = (parseInt(arr[i].cases.total)/parseInt(arr[i].tests.total)).toFixed(7);\r\n                nation = arr[i].country;\r\n            }\r\n        }\r\n        solve.push(min,nation);\r\n        return solve;\r\n    }\r\n    const findmaxTPC = (arr) => {\r\n        let max = 0;\r\n        let nation = \"\";\r\n        let solve = [];\r\n        for(let i=0; i<arr.length; i++){\r\n            if((parseInt(arr[i].tests.total)/parseInt(arr[i].population)) > max){\r\n                max = (parseInt(arr[i].tests.total)/parseInt(arr[i].population)).toFixed(7);\r\n                nation = arr[i].country\r\n            }\r\n        }\r\n        solve.push(max,nation);\r\n        return solve;\r\n    }\r\n    const findminLCC = (arr) => {\r\n        let min = 1;\r\n        let nation = \"\";\r\n        let solve = [];\r\n        for(let i = 0; i<arr.length; i++){\r\n            if((parseInt(arr[i].cases.total)/parseInt(arr[i].population)) < min){\r\n                min = (parseInt(arr[i].cases.total)/parseInt(arr[i].population)).toFixed(7);\r\n                nation = arr[i].country;\r\n            }\r\n        }\r\n        solve.push(min,nation);\r\n        return solve;   \r\n    }\r\n\r\n    const CFR = findMinCFR(finalData);\r\n    const RR = findMaxRecoveryRatio(finalData);\r\n    const TPR = findMinTPR(finalData);\r\n    const TPC = findmaxTPC(finalData);\r\n    const LCC = findminLCC(finalData);\r\n    return(\r\n        <div>\r\n            <div className=\"performer_wrapper\">\r\n                <h1 className=\"performer_header_main\">{'Best Case Fatality Ratio'}</h1>\r\n                <p className=\"performer_header_deputy\">{'Case Fatality Ratio (CFR) = Number of Deaths due to COVID / Number of positive COVID cases.'}</p>\r\n                <div className=\"performer_content\">\r\n                    <div className=\"performer_section\" id=\"wrapper\">\r\n                        <button className={this.state.cfr ? \"performer_button dissolve vanish\" : \"performer_button\"} id=\"button\" onClick={this.showCFR}>check results</button>\r\n                        <p className={this.state.cfr ? \"performer_text_header\" : \"performer_text_header vanish\"} id=\"text\">{CFR[1]}</p>\r\n                        <p className={this.state.cfr ? \"performer_text\" : \"performer_text vanish\"}>{CFR[1] + \" has a Case Fatality Ratio of just \" + CFR[0] + \".\"}</p>\r\n                    </div>\r\n                    <div className={this.state.cfr ? \"confetti\" : \"hide\"}>\r\n                        <LottieAnimation lotti={confetti} height={300} width={300}/>\r\n                    </div>\r\n                </div>\r\n                <h1 className=\"performer_header_main\">{'Best Recovery Ratio'}</h1>\r\n                <p className=\"performer_header_deputy\">{'Recovery Ratio = Number of Recoveries / Number of positive Cases'}</p>\r\n                <div className=\"performer_content\">\r\n                    <div className=\"performer_section\" id=\"wrapper\">\r\n                        <button className={this.state.rr ? \"performer_button dissolve vanish\" : \"performer_button\"} id=\"button\" onClick={this.showRR}>check results</button>\r\n                        <p className={this.state.rr ? \"performer_text_header\" : \"performer_text_header vanish\"} id=\"text\">{RR[1]}</p>\r\n                        <p className={this.state.rr ? \"performer_text\" : \"performer_text vanish\"}>{RR[1] + \" has the highest Recovery Ratio of \" + RR[0] + \".\"}</p>\r\n                    </div>\r\n                </div>\r\n                <h1 className=\"performer_header_main\">{'Lowest Test Positivity Rate'}</h1>\r\n                <p className=\"performer_header_deputy\">{'Test Positivity Rate = Number of Positive Cases / Number of Tests Conducted'}</p>\r\n                <div className=\"performer_content\">\r\n                    <div className=\"performer_section\" id=\"wrapper\">\r\n                        <button className={this.state.tpr ? \"performer_button dissolve vanish\" : \"performer_button\"} id=\"button\" onClick={this.showTPR}>check results</button>\r\n                        <p className={this.state.tpr ? \"performer_text_header\" : \"performer_text_header vanish\"} id=\"text\">{TPR[1]}</p>\r\n                        <p className={this.state.tpr ? \"performer_text\" : \"performer_text vanish\"}>{TPR[1] + \" has the lowest Tests Positivity Rate of \" + TPR[0] + \".\"}</p>\r\n                    </div>\r\n                </div>\r\n                <h1 className=\"performer_header_main\">{'Highest Tests per Capita'}</h1>\r\n                <p className=\"performer_header_deputy\">{'Tests per Capita = Number of Tests Conducted / Total population'}</p>\r\n                <div className=\"performer_content\">\r\n                    <div className=\"performer_section\" id=\"wrapper\">\r\n                        <button className={this.state.tpc ? \"performer_button dissolve vanish\" : \"performer_button\"} id=\"button\" onClick={this.showTPC}>check results</button>\r\n                        <p className={this.state.tpc ? \"performer_text_header\" : \"performer_text_header vanish\"} id=\"text\">{TPC[1]}</p>\r\n                        <p className={this.state.tpc ? \"performer_text\" : \"performer_text vanish\"}>{TPC[1] + \" has the highest Tests per Capita of \" + TPC[0] + \". (If it's more than 1, then two or more tests have been administered on each person)\"}</p>\r\n                    </div>\r\n                </div>\r\n                <h1 className=\"performer_header_main\">{'Lowest Positive Cases per Capita'}</h1>\r\n                <p className=\"performer_header_deputy\">{'Cases per Capita = Total number of Cases / Total Population'}</p>\r\n                <div className=\"performer_content\">\r\n                    <div className=\"performer_section\" id=\"wrapper\">\r\n                        <button className={this.state.lcc ? \"performer_button dissolve vanish\" : \"performer_button\"} id=\"button\" onClick={this.showLCC}>check results</button>\r\n                        <p className={this.state.lcc ? \"performer_text_header\" : \"performer_text_header vanish\"} id=\"text\">{LCC[1]}</p>\r\n                        <p className={this.state.lcc ? \"performer_text\" : \"performer_text vanish\"}>{LCC[1] + \" has the lowest positive cases per capita of \" + LCC[0] + \".\"}</p>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div> \r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Performfilter;"]},"metadata":{},"sourceType":"module"}