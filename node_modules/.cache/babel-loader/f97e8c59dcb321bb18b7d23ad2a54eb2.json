{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\covidtrack\\\\state-of-covid\\\\src\\\\Components\\\\Leaders\\\\Datafilter.js\";\nimport React from \"react\";\nimport Testsgraph from \"./Tests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Datafilter = ({\n  data\n}) => {\n  const filteredData = data.filter(datas => {\n    return datas.Country_text != \"World\";\n  });\n\n  function testsort(array) {\n    return array.sort(function (a, b) {\n      return a.tests.total > b.tests.total ? -1 : b.tests.total > a.tests.total ? 1 : 0;\n    });\n  }\n\n  function recoveryratiosort(array) {\n    return array.sort(function (a, b) {\n      return a.cases.recovered / a.cases.total > b[cases].recovered / b[cases].total ? -1 : b.cases.recovered / b.cases.total > a[cases].recovered / a[cases].total ? 1 : 0;\n    });\n  }\n\n  function testsPush(arr) {\n    let dataset = [];\n\n    for (var i = 0; i < arr.length - 1; i++) {\n      dataset.push(arr[i].tests.total);\n    }\n\n    return dataset;\n  }\n\n  function labelssPush(arr) {\n    let labelset = [];\n\n    for (var i = 0; i < arr.length - 1; i++) {\n      labelset.push(arr[i].country);\n    }\n\n    return labelset;\n  }\n\n  const sortedData = testsort(filteredData);\n  const sortedData2 = recoveryratiosort(filteredData);\n  const finalTestsData = testsPush(sortedData.slice(0, 5));\n  const finalLabel = labelssPush(sortedData.slice(0, 10));\n  console.log(sortedData2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Testsgraph, {\n        data2: finalTestsData,\n        label: finalLabel,\n        title: \"Tests Conducted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Testsgraph, {\n        data2: finalTestsData,\n        label: finalLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Datafilter;\nexport default Datafilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Datafilter\");","map":{"version":3,"sources":["C:/Users/user/Desktop/covidtrack/state-of-covid/src/Components/Leaders/Datafilter.js"],"names":["React","Testsgraph","Datafilter","data","filteredData","filter","datas","Country_text","testsort","array","sort","a","b","tests","total","recoveryratiosort","cases","recovered","testsPush","arr","dataset","i","length","push","labelssPush","labelset","country","sortedData","sortedData2","finalTestsData","slice","finalLabel","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Testsgraph from \"./Tests\"\r\nconst Datafilter = ({data}) => {\r\n\t\r\n\tconst filteredData = data.filter((datas) => {\r\n\treturn datas.Country_text != \"World\";\r\n\t\t});\r\n\r\n\tfunction testsort(array) {\r\n    \treturn array.sort(function (a, b) {\r\n      \t\treturn a.tests.total > b.tests.total\r\n\t\t        ? -1\r\n\t\t        : b.tests.total > a.tests.total\r\n\t\t        ? 1\r\n\t\t        : 0;\r\n\t\t    });\r\n  \t}\r\n\tfunction recoveryratiosort(array) {\r\n\t\treturn array.sort(function (a, b) {\r\n\t  \t\treturn ((a.cases.recovered)/(a.cases.total)) > ((b[cases].recovered)/(b[cases].total))\r\n\t\t        ? -1\r\n\t\t        : ((b.cases.recovered)/(b.cases.total)) >  ((a[cases].recovered)/(a[cases].total))\r\n\t\t        ? 1\r\n\t\t        : 0;\r\n\t\t    });\r\n  \t}\r\n  \tfunction testsPush(arr) {\r\n  \t\tlet dataset = [];\r\n  \t\tfor (var i = 0; i < arr.length - 1; i++){\r\n  \t\t\tdataset.push(arr[i].tests.total);\r\n  \t\t}\r\n  \t\treturn dataset;\r\n  \t}\r\n  \tfunction labelssPush(arr) {\r\n\tlet labelset = [];\r\n\tfor (var i = 0; i < arr.length - 1; i++){\r\n\t\tlabelset.push(arr[i].country);\r\n\t}\r\n\treturn labelset;\r\n  \t}\r\n\r\n\tconst sortedData = testsort(filteredData);\r\n\tconst sortedData2 = recoveryratiosort(filteredData);\r\n\tconst finalTestsData = testsPush(sortedData.slice(0,5));\r\n\tconst finalLabel = labelssPush(sortedData.slice(0,10));\r\n\tconsole.log(sortedData2);\r\n\treturn(\r\n\t\t<div>\r\n\t\t<div><Testsgraph data2 = {finalTestsData} label = {finalLabel} title = \"Tests Conducted\" /></div>\r\n\t\t<div><Testsgraph data2 = {finalTestsData} label = {finalLabel} /></div>\r\n\t\t</div>)\r\n}\r\n\r\nexport default Datafilter;"]},"metadata":{},"sourceType":"module"}