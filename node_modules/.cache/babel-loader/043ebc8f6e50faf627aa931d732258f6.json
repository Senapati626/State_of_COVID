{"ast":null,"code":"var _jsxFileName = \"D:\\\\covidtrack\\\\State_of_COVID\\\\State_of_COVID\\\\src\\\\Components\\\\Performers\\\\Performfilter.js\";\nimport React from \"react\";\nimport './performers.css';\nimport LottieAnimation from './Lottie';\nimport confetti from './confetti.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Performfilter extends React.Component {\n  constructor() {\n    super();\n\n    this.showResults = () => {\n      this.setState({\n        results: !this.state.results\n      });\n      console.log(this.state.results);\n    };\n\n    this.state = {\n      results: false\n    };\n  }\n\n  render() {\n    const findMaxRecoveryRatio = arr => {\n      let max = 0;\n      let nation = \"\";\n\n      for (let i = 0; i < arr.length; i++) {\n        if (parseInt(arr[i].cases.recovered) / parseInt(arr[i].cases.total) > max) {\n          max = parseInt(arr[i].cases.recovered) / parseInt(arr[i].cases.total);\n          nation = arr[i].country;\n        }\n      }\n\n      return nation;\n    };\n\n    const findMinCFR = arr => {\n      let min = 1;\n      let nation = \"\";\n      let cases = 0;\n      let deaths = 0;\n      let solve = [];\n\n      for (let i = 0; i < arr.length; i++) {\n        if (parseInt(arr[i].deaths.total) / parseInt(arr[i].cases.total) < min) {\n          min = (parseInt(arr[i].deaths.total) / parseInt(arr[i].cases.total)).toFixed(7);\n          nation = arr[i].country;\n          cases = arr[i].cases.total;\n          deaths = arr[i].deaths.total;\n        }\n      }\n\n      solve.push(min, nation, cases, deaths);\n      return solve;\n    };\n\n    const CFR = findMinCFR(this.props.data);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"performer_wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"performer_header_main\",\n          children: 'Best Case Fatality Ratio'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"performer_content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"performer_section\",\n            id: \"wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.state.results ? \"performer_button dissolve\" : \"performer_button\",\n              id: \"button\",\n              onClick: this.showResults,\n              children: \"check results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: this.state.results ? \"performer_text\" : \"performer_text vanish\",\n              id: \"text\",\n              children: CFR[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"performer_section\",\n            id: \"confetti\",\n            children: /*#__PURE__*/_jsxDEV(LottieAnimation, {\n              lotti: confetti,\n              height: 300,\n              width: 300\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Performfilter;","map":{"version":3,"sources":["D:/covidtrack/State_of_COVID/State_of_COVID/src/Components/Performers/Performfilter.js"],"names":["React","LottieAnimation","confetti","Performfilter","Component","constructor","showResults","setState","results","state","console","log","render","findMaxRecoveryRatio","arr","max","nation","i","length","parseInt","cases","recovered","total","country","findMinCFR","min","deaths","solve","toFixed","push","CFR","props","data"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport './performers.css';\r\nimport LottieAnimation from './Lottie';\r\nimport confetti from './confetti.json';\r\n\r\nclass Performfilter extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            results: false\r\n        }\r\n    }\r\n    showResults = () =>{\r\n        this.setState({results: (!this.state.results)})\r\n        console.log(this.state.results)\r\n    }\r\n    render(){\r\n    const findMaxRecoveryRatio = (arr) => {\r\n        let max = 0;\r\n        let nation = \"\";\r\n        for(let i=0; i<arr.length; i++){\r\n            if((parseInt(arr[i].cases.recovered)/parseInt(arr[i].cases.total)) > max){\r\n                max = (parseInt(arr[i].cases.recovered)/parseInt(arr[i].cases.total));\r\n                nation = arr[i].country\r\n            }\r\n        }\r\n        return nation;\r\n        \r\n    }\r\n    const findMinCFR = (arr) => {\r\n        let min = 1;\r\n        let nation = \"\";\r\n        let cases = 0;\r\n        let deaths = 0;\r\n        let solve = [];\r\n        for(let i = 0; i<arr.length; i++){\r\n            if((parseInt(arr[i].deaths.total)/parseInt(arr[i].cases.total)) < min){\r\n                min = (parseInt(arr[i].deaths.total)/parseInt(arr[i].cases.total)).toFixed(7);\r\n                nation = arr[i].country;\r\n                cases = arr[i].cases.total;\r\n                deaths = arr[i].deaths.total;\r\n            }\r\n\r\n        }\r\n        solve.push(min,nation,cases,deaths);\r\n        return solve;\r\n    }\r\n    const CFR = findMinCFR(this.props.data);\r\n    return(\r\n        <div>\r\n            <div className=\"performer_wrapper\">\r\n            <h1 className=\"performer_header_main\">{'Best Case Fatality Ratio'}</h1>\r\n                <div className=\"performer_content\">\r\n                    <div className=\"performer_section\" id=\"wrapper\">\r\n                        <button className={this.state.results ? \"performer_button dissolve\" : \"performer_button\"} id=\"button\" onClick={this.showResults}>check results</button>\r\n                        <p className={this.state.results ? \"performer_text\" : \"performer_text vanish\"} id=\"text\">{CFR[1]}</p>\r\n                    </div>\r\n                    <div className=\"performer_section\" id=\"confetti\">\r\n                        <LottieAnimation lotti={confetti} height={300} width={300} />\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Performfilter;"]},"metadata":{},"sourceType":"module"}